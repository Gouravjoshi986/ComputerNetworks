# TCP / IP Model 

also known as internet protocol suit
similar to osi model but layers are reduced. 

1. Application
2. Transport 
3. Network
4. Data Link 
5. Physical 

* this is used practically while the osi model is a theoretical concept. 

# Application layer

- main layer that the user interact with. 
- whatsapp/browser etc. 
- lies on our devices 

connection type 
1. client server architecture
Server - high availability must be there 

2. Peer to peer architecture - clients are connected to each other no big data center or server.  Key advantage is we can scale it very rapidly . A good example is bit torrent. 

* some networking devices 
1. repeater - its main job is to regenerate a signal over same network when it becomes too weak to transmit over longer distance. it doesnt amplifies the signal it just regenerates it bit by bit. 
2. Hub -  it is a multi port repeater. ( repeater is 2 port)   -> hub is of two types active(own power supply used for extending distance) and passive(cant be used to extend distance)
3. Bridge - a type of repeater with added functionality of filtering by reading mac addresses. used at data link layer. 
4. Switch - multi port bridge (very efficient)
5. Router - at network layer to route the packets as per ip addresses
6. Gateway - Passage to connect two networks together ,works as a messenger agent to take data from one system to another, also called protocol convertors. 
7. Brouter - bridging router 


* sockets = interface between a process and the internet 
* ports = if many processes are working in one application. then ephemeral ports are used to identify which process do we need to send the data to.   
The ephemeral ports are assigned by the application randomly on client side. 

* other points in application layer are dns / http smtp pop protocols

# Transport Layer 
- It is responsible for transport of data from application to the network and vice versa. 
* Multiplexing - it allows us to send data of various types/sources in one go. 
Transport layer has a multiplexer which allows us to do this. 

* Demultipleixng - vice versa of multiplexing.
Transport layer has a demultiplexer to achieve this data transfer. 
It has sockets where data packets are sent and transport layer adds port number to them. 
* it also takes care of congestion (traffic) control.
The Transmission Control Protocol (TCP) uses a congestion control algorithm to manage data flow over a network and prevent congestion. The algorithm has three phases:
* Slow start: The sender increases the congestion window size (cwnd) by one MSS (maximum segment size) after each acknowledgment (ACK).
* Congestion avoidance: The cwnd increases by one MSS per round-trip time (RTT).
 Fast recovery: The cwnd increases by one segment for each ACK received after a packet loss is detected. 

* Checksums -  they take care of the ordering of the data packets ( when they are broken into segments they must be joined in order to make sense of the data )
* check sum is like a number (eg. for a string using some logic you created a number related to that data and this number is attached to the data)
- This number is called checksum .

* Timer - when you send a data packet a timer will start and when you receive the confirmation back the timer will stop. if not then the timer will expire and we will know that the data packet is lost. This is known as retransmission timer. 

* The duplicate packet problem is solved using A unique number which is given to all of the packets. This number is called sequence number.

# UDP / TCP / 3-way Handshake in other file

# Network Layer 
- Responsible for transport of data from one network/device to another network/device 

- we know  transport layer - segments 
           network layer - packets 
           data link layer  - frames

Here we work with routers. 
each router has its own network address. 
- A packet will contain network layer address of source and destination and information. 
- The router will check its router table /forwarding table and send it.  
* This is called Hop by Hop Forwarding. 
that is hopping routers by routers until it reaches the correct router. 
( Forwarding table exist inside a router. it is just like a data structure )

* for an ip   192.168.2.30 ---> this is the device address
              |_______|
                 | 
            this portion is called a network address     

* But who creates these routing tables and adds new routers to tables? --> control plane

Contorl plane is used to build these routing tables. 
It is like a graph data structure. where routers are nodes and links are edges. 

Two types of routing : 
1. Static routing  ---> adding addresses manually in the routing table 
2. Dynamic routing ---> bellman ford ,dijkstras algo are used 

# Network Layer Protocols are IP ( internet protocols) ( in the protocol file)

# Data Link Layer 
* data link layer is responsible to send the data packets over to a physical device.  
* it transfers in frame 
* whenever a new device is added to router. it connects it to the dhcp server and dhcp server will allocate it an ip address. 

# mac address =  data link layer address
* at data link layer every device communicates with data link layer address. (mac address)
# Address resolution protocol (ARP)
* ARP Cache - a device connected within data link layer will ask for the address (data link add.) to other devices connected within layer.
* frame contains - data link layer address of source. ip address of destination.  
* In arp cache it asks for the data link address of the destination


# Study set of questions on gfg for complete revision and cover extra topics/points that are not covered here 