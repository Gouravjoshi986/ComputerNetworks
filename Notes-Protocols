# Web protocols
TCP / IP 
 * HTTP     - defines how data is transferred
 * DHCP     - allocates ip addresses to devices connected to our network 
 * FTP - file transfer protocol 
 * SMTP - simple mail transfer protocol - to send the e mails
 * POP3 and IMAC - to receive the emails
 * SSH , VNC 
 * UDP  - stateless connection -data may be lost
Telnet - port 23 - terminal emulation ,allows user to connect to a host using telnet client 

# HTTP 
It is a client server protocol which defines how a client will send a request to a server (http request) and how a server will respond (http response). 

HTTP is a application layer protocol. 
It has some methods eg. GET POST DELETE PUT etc
Get - you are requesting some data
post - giving something to server to process
put - updating something in server
delete - delete data from the server 

Every application layer protocol needs a transport layer protocol( TCP and UDP ). 

Http uses Tcp inside it. 
It is a stateless protocol and server doesnt store any info about the client. `


# Status codes 
200 - all good 
404 - cant find 
400 - bad request 
500 - internal server error 

classes  -->  1XX - informational
              2XX - success
              3XX - redirection purpose
              4XX - client error 
              5XX - server error 


# Cookie 
Unique string stored in clients browser 
* Third party cookies - for websites that you do not visit ( by ads of visited websites who use cookies of that website )

# SMTP - for sending email POP3 - for receiving email  
this protocol uses tcp for transport layer as we need to preserve all data 
The sender sends the email and it moves to smtp server where it lives and makes a connection with the receivers smtp server and gets transferred via tcp.  when receiver opens its email application layer the emails are downloaded from the server and received. 
* If both are using same servers(eg gmail.com) then they are directly transferred. 

you can use command for looking name and ip of a smtp server  
nslookup -type=mx gmail.com(server name)

The receiving protocol POP (post office protocol)
* first the client connects to it . The port is 110. 
* the client asks the pop server to get all the emails 

* IMAP - internet message access protocol - allows you to see emails on multiple devices. 


# UDP
User datagram protocol 
* data may or may not be delivered 
* data may change 
* data may not be in order

* it is a connection-less protocol
udp uses checksums and it will know that the data has been corrupted but * It is what it is *.
              _______________________________________________
* Udp Packet: | source port no          length of datagram  |
              | destination port no     checksum            | 
              |_________________Data________________________|

udp packet - data is called the Header . The size of this header is 2*4 = 8 bytes 
udp is a lot faster.
* DNS uses udp because its fast. 
you can see this packets using command 
tcpdump -c 5  --> shows 5 packets 


# TCP (transmission control protocol)
* aplication layer sends lot of raw data. 
* tcp divides it in segments / add checksums etc.
* it also collects data from network layer while receiving data. 
* congestion control 
takes care of when data doesnt arrive and maintains the order of data 

* features -> 
connection oriented 
error control
congestion control
bi directional - full duplex -> both computers can send files simultaneously (one tcp connection between only two conenctions) 
* tcp data packet has a sequence and acknowledgement number added into a header. 


# 3 Way handshake -> how connection is made in tcp 
* client                                  server 
        ------synchronisation flag------>
            & sequence number(random for security)

        <-----acknowledgement flag------
           & a processed sequence number
           & a ack. no = prev seq + 1

        ------acknowledgement flag------->
           & a org. sequence no + 1
           & a ack no = prev seq + 1

After this the connection will be estabilished. 



