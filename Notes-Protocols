# Web protocols
TCP / IP 
 * HTTP     - defines how data is transferred
 * DHCP     - allocates ip addresses to devices connected to our network 
 * FTP - file transfer protocol 
 * SMTP - simple mail transfer protocol - to send the e mails
 * POP3 and IMAC - to receive the emails
 * SSH , VNC 
 * UDP  - stateless connection -data may be lost
Telnet - port 23 - terminal emulation ,allows user to connect to a host using telnet client 

# HTTP 
It is a client server protocol which defines how a client will send a request to a server (http request) and how a server will respond (http response). 

HTTP is a application layer protocol. 
It has some methods eg. GET POST DELETE PUT etc
Get - you are requesting some data
post - giving something to server to process
put - updating something in server
delete - delete data from the server 

Every application layer protocol needs a transport layer protocol( TCP and UDP ). 

Http uses Tcp inside it. 
It is a stateless protocol and server doesnt store any info about the client. `


# Status codes 
200 - all good 
404 - cant find 
400 - bad request 
500 - internal server error 

classes  -->  1XX - informational
              2XX - success
              3XX - redirection purpose
              4XX - client error 
              5XX - server error 


# Cookie 
Unique string stored in clients browser 
* Third party cookies - for websites that you do not visit ( by ads of visited websites who use cookies of that website )

# SMTP - for sending email POP3 - for receiving email  
this protocol uses tcp for transport layer as we need to preserve all data 
The sender sends the email and it moves to smtp server where it lives and makes a connection with the receivers smtp server and gets transferred via tcp.  when receiver opens its email application layer the emails are downloaded from the server and received. 
* If both are using same servers(eg gmail.com) then they are directly transferred. 

you can use command for looking name and ip of a smtp server  
nslookup -type=mx gmail.com(server name)

The receiving protocol POP (post office protocol)
* first the client connects to it . The port is 110. 
* the client asks the pop server to get all the emails 

* IMAP - internet message access protocol - allows you to see emails on multiple devices. 


# UDP
User datagram protocol 
* data may or may not be delivered 
* data may change 
* data may not be in order

* it is a connection-less protocol
udp uses checksums and it will know that the data has been corrupted but * It is what it is *.
              _______________________________________________
* Udp Packet: | source port no          length of datagram  |
              | destination port no     checksum            | 
              |_________________Data________________________|

udp packet - data is called the Header . The size of this header is 2*4 = 8 bytes 
udp is a lot faster.
* DNS uses udp because its fast. 
you can see this packets using command 
tcpdump -c 5  --> shows 5 packets 


# TCP (transmission control protocol)
* aplication layer sends lot of raw data. 
* tcp divides it in segments / add checksums etc.
* it also collects data from network layer while receiving data. 
* congestion control 
takes care of when data doesnt arrive and maintains the order of data 

* features -> 
connection oriented 
error control
congestion control
bi directional - full duplex -> both computers can send files simultaneously (one tcp connection between only two conenctions) 
* tcp data packet has a sequence and acknowledgement number added into a header. 


# 3 Way handshake -> how connection is made in tcp 
* client                                  server 
        ------synchronisation flag------>
            & sequence number(random for security)

        <-----acknowledgement flag------
           & a processed sequence number
           & a ack. no = prev seq + 1

        ------acknowledgement flag------->
           & a org. sequence no + 1
           & a ack no = prev seq + 1

After this the connection will be estabilished. 



# IP ( internet protocol )

1. IPv4 - these are 32 bit numbers with 4 words 
2. IPv6 - these are 128 bit numbers
# Every IP address has two parts. The first part indicates which network the address belongs to. The second part specifies the device within that network. However, the length of the "first part" changes depending on the network's class.

# Networks are categorized into different classes, labeled A through E. Class A networks can connect millions of devices. Class B networks and Class C networks are progressively smaller in size. (Class D and Class E networks are not commonly used.)

* Class A network: Everything before the first period indicates the network, and everything after it specifies the device within that network. Using 203.0.113.112 as an example, the network is indicated by "203" and the device by "0.113.112."

* Class B network: Everything before the second period indicates the network. Again using 203.0.113.112 as an example, "203.0" indicates the network and "113.112" indicates the device within that network.

* Class C network: For Class C networks, everything before the third period indicates the network. Using the same example, "203.0.113" indicates the Class C network, and "112" indicates the device.

The routing ( hopping ) happens via isp ( on a block of ip addresses ). not on your individual ip addresses.

 Routers within a network use something called a subnet mask to sort data into subnetworks.

* Subnets - A subnet, or subnetwork, is a network inside a network. Subnets make networks more efficient. Through subnetting, network traffic can travel a shorter distance without passing through unnecessary routers to reach its destination.

* networks are more efficient when messages travel as directly as possible. When a network receives data packets from another network, it will sort and route those packets by subnet so that the packets do not take an inefficient route to their destination.

* A subnet mask is like an IP address, but for only internal usage within a network. Routers use subnet masks to route data packets to the right place. Subnet masks are not indicated within data packets traversing the Internet â€” those packets only indicate the destination IP address, which a router will match with a subnet. 

A network address is the internet address for a network, while a subnet address is a portion of a network address that identifies a subnetwork within a larger network. A subnet address can be a network address, but a network address cannot be a subnet address

Class 
 A   0.0.0.0   ---- 127.255.255.255
 B   128.0.0.0    ||   ||   ||  ||
 C   192.0.0.0       ||   ||   ||  
 D   224.0.0.0          ||  ||   ||   
 E   240.0.0.0   ----- 255.255.255.255

* Variable length subnet - means you can assign the length of your subnet. that is 
12.0.0.0/24 - this means that the first 24 bits are a part of subnet , so remaining 8 bits are for ip address which would be 2^8 = 256 ip addresses

* Reserved addesses     
local host  127.0.0.0/8   --> 127.0.0.1 this is local host and it is a loopback addresses as it allows protocols on same machine 

* Packets : apart from data header is of 20 bytes here.  it contains the ip version ,total length identification no  , some flags, protocols ,checksum etc. 

* it also contains TTL ( time to leave ) if packet doesnt reach after a certain number of hops(equal to ttl) it will leave/drop.  

# IPv4 vs IPv6 
ipv4 - 32 bit so 2^32 - approx 4.3 billion ip addresses can be created  but now it is not enough 

ipv6  - 128 bits (4 times larger) - 2^(128) ip addresses can be formed. (3.4 x 10^38 )

* but cons - it is not backward compatible. 

websites configured with ipv4 cant access ipv6. 
everybody would have to shift. lot of hardware work. 

it is represented by 8 numbers where every num is hexadecimal digit.   -- > each number = 16bit

* Middle-boxes - extra devices which also interact with ip addresses. some of such devices are: 
1. Firewall -> global internet and own network 
it filters out ip addresses based on various rules.   -- address or -- modify packets or --portNo or --flags or --protocols

* Stateless and stateful firewall   --->uses state /cache memory 
    |_> doesnt maintains a state

2. Network address Translation (Nat)  : modify the ip address information into backend. 
it modifies the address and outside world will see the modified ip. (makes ip private)







